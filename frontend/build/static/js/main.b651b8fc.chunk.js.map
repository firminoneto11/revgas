{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","getData","_","a","fetch","response","json","getSingleBankData","comp_code","url","useEffect","TableBody","props","banks","bankData","Array","map","el","index","id","compensation_code","inst_name","institution_name","className","type","onKeyUp","event","keyCode","preventDefault","target","nextSibling","click","onClick","previousSibling","value","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAyHeA,MArHf,WAEI,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAGMC,EAAO,uCAAG,WAAMC,GAAN,eAAAC,EAAA,4DACA,iDADA,SAGSC,MAFT,kDADA,cAGRC,EAHQ,gBAIKA,EAASC,OAJd,OAIZD,EAJY,OAKZL,EAAQK,GALI,2CAAH,sDAQPE,EAAiB,uCAAG,WAAMC,GAAN,iBAAAL,EAAA,6DAChBM,EADgB,wDACuCD,GADvC,SAGDJ,MAAMK,GAHL,cAGlBJ,EAHkB,gBAILA,EAASC,OAJJ,OAItBD,EAJsB,OAKtBL,EAAQK,GALc,2CAAH,sDASvBK,qBAAU,WACNT,MACD,IAGH,IAAMU,EAAY,SAAAC,GAGd,IAGIC,EAHEC,EAAWF,EAAME,SAIvB,GAAIA,aAAoBC,MACpBF,EAAQC,GAAYA,EAASE,KAAI,SAACC,EAAIC,GAClC,IAAMC,EAAKF,EAAGE,GACRX,EAAYS,EAAGG,kBACfC,EAAYJ,EAAGK,iBAErB,OACI,+BACI,6BAAKH,IACL,6BAAKX,IACL,6BAAKa,MAHAH,WAYjB,GAAIJ,EAAU,CACV,IAAMK,EAAKL,EAASK,GACdX,EAAYM,EAASM,kBACrBC,EAAYP,EAASQ,iBAE3BT,EACI,+BACI,6BAAKM,IACL,6BAAKX,IACL,6BAAKa,MAHD,KASpB,OAAO,gCAAQR,KAqBnB,OACI,gCAEI,oBAAIU,UAAU,QAAd,yBAEA,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,cAAb,qDACA,uBAAOC,KAAK,SAASD,UAAU,eAAeE,QAf1D,SAAgBC,GACU,KAAlBA,EAAMC,UACND,EAAME,iBACNF,EAAMG,OAAOC,YAAYC,YAarB,wBAAQR,UAAU,gBAAgBS,QA1B9C,SAAiBN,GACb,IAAMlB,EAAYkB,EAAMG,OAAOI,gBAAgBC,MAC3C1B,EAAU2B,OAAS,EACnB5B,EAAkBC,GAGlBP,KAoBI,uBAGJ,qBAAKsB,UAAU,kBAAf,SACA,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,oCACA,mDACA,uDAGR,cAACZ,EAAD,CAAWG,SAAUf,aC7GrCqC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.b651b8fc.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nfunction App() {\r\n    // declares hook to store fetch data\r\n    const [data, setData] = useState()\r\n\r\n    // function to fetch api data\r\n    const getData = async _ => {\r\n        const url = 'https://revgas.herokuapp.com/revgas/api/banks/'\r\n\r\n        let response = await fetch(url)\r\n        response = await response.json()\r\n        setData(response)\r\n    }\r\n\r\n    const getSingleBankData = async comp_code => {\r\n        const url = `https://revgas.herokuapp.com/revgas/api/banks/${comp_code}`\r\n\r\n        let response = await fetch(url)\r\n        response = await response.json()\r\n        setData(response)\r\n    }\r\n\r\n    // call function after render\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    // main component\r\n    const TableBody = props => {\r\n\r\n        // all bank data as props\r\n        const bankData = props.bankData\r\n\r\n        // maps the data and stores it in a variable to render later\r\n        let banks\r\n        if (bankData instanceof Array) {\r\n            banks = bankData && bankData.map((el, index) => {\r\n                const id = el.id\r\n                const comp_code = el.compensation_code\r\n                const inst_name = el.institution_name\r\n\r\n                return (\r\n                    <tr key={index}>\r\n                        <td>{id}</td>\r\n                        <td>{comp_code}</td>\r\n                        <td>{inst_name}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        // else if (bankData && 'invalid_bank' in Object.entries(bankData)) {\r\n\r\n        // }\r\n        else {\r\n            if (bankData) {\r\n                const id = bankData.id\r\n                const comp_code = bankData.compensation_code\r\n                const inst_name = bankData.institution_name\r\n\r\n                banks = (\r\n                    <tr key=\"1\">\r\n                        <td>{id}</td>\r\n                        <td>{comp_code}</td>\r\n                        <td>{inst_name}</td>\r\n                    </tr>\r\n                )\r\n            }\r\n        }\r\n\r\n        return <tbody>{banks}</tbody>\r\n    }\r\n\r\n    function getBank(event) {\r\n        const comp_code = event.target.previousSibling.value\r\n        if (comp_code.length > 0) {\r\n            getSingleBankData(comp_code)\r\n        }\r\n        else {\r\n            getData()\r\n        }\r\n    }\r\n\r\n    function search(event) {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault()\r\n            event.target.nextSibling.click()\r\n        }\r\n    }\r\n\r\n    // Final Front end\r\n    return (\r\n        <div>\r\n\r\n            <h1 className=\"title\">Banks Index</h1>\r\n\r\n            <div className=\"search-box\">\r\n                <p className=\"search-text\">Search a bank by the Compensation Code:</p>\r\n                <input type=\"number\" className=\"search-input\" onKeyUp={search} />\r\n                <button className=\"look-for-bank\" onClick={getBank}>Search</button>\r\n            </div>\r\n\r\n            <div className=\"table-container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Compensation Code</th>\r\n                        <th>Institution name</th>\r\n                    </tr>\r\n                </thead>\r\n                <TableBody bankData={data} />\r\n            </table>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}